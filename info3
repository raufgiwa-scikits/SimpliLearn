import pandas as pd
from IPython.display import display, HTML
import os

# Define the path to your CSV file
CSV_FILE = 'data.csv'

# Function to load data from the CSV file
def load_data():
    if os.path.exists(CSV_FILE):
        return pd.read_csv(CSV_FILE)
    else:
        return pd.DataFrame(columns=['Column1', 'Column2', 'Column3'])

# Function to save data back to the CSV file
def save_data(df):
    df.to_csv(CSV_FILE, index=False)

# Function to display an editable HTML table
def display_editable_table(df):
    html = '<form method="POST">'
    html += '<table border="1">'
    
    # Create header
    html += '<tr>'
    for col in df.columns:
        html += f'<th>{col}</th>'
    html += '</tr>'
    
    # Create editable rows
    for i, row in df.iterrows():
        html += '<tr>'
        for col in df.columns:
            html += f'<td><input type="text" name="{col}_{i}" value="{row[col]}"></td>'
        html += '</tr>'
    
    html += '</table>'
    html += '<button type="submit">Save Changes</button>'
    html += '</form>'
    
    display(HTML(html))

# Function to update the DataFrame from form input
def update_data_from_form(df, form_data):
    for i in range(len(df)):
        for col in df.columns:
            form_key = f'{col}_{i}'
            if form_key in form_data:
                df.at[i, col] = form_data[form_key]

# Load initial data from CSV
df = load_data()

# Display the editable table
display_editable_table(df)

# Function to simulate form submission (since Jupyter doesn't support native form POST handling)
def handle_form_submission(form_data):
    # Update data based on the form submission
    update_data_from_form(df, form_data)
    # Save the updated data back to CSV
    save_data(df)
    # Display the updated table
    display_editable_table(df)
    print("CSV file updated successfully!")

# Simulate form data submission (replace this with actual form inputs in a real app)
mock_form_data = {
    'Column1_0': 'A1_Updated',
    'Column2_0': 'B1_Updated',
    'Column3_0': 'C1_Updated',
    'Column1_1': 'A2_Updated',
    'Column2_1': 'B2_Updated',
    'Column3_1': 'C2_Updated',
}

# Call this function to simulate form submission and update CSV
handle_form_submission(mock_form_data)
